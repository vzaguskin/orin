#!/usr/bin/env python3
"""
–û—Ä–∏–Ω ‚Äî –ø–æ–ª–Ω–æ—Å—Ç—å—é –ª–æ–∫–∞–ª—å–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞ Rockchip RK3588
–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: Sherpa-onnx (ASR), MMS-TTS (TTS), Qwen-1.7B (LLM), rknn, asyncio, sounddevice
–ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ–±–ª–∞–∫–∞. –ù–µ —Ç—Ä–µ–±—É–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞. –ù–µ —Å–ª—ã—à–∏—Ç —Å–µ–±—è.
"""

import os
import time
import numpy as np
import sounddevice as sd
import asyncio
import queue
import json
from typing import Optional
import requests
from requests import Session
from normalizer import StreamTextProcessor

# =========================
# üì¶ –ò–ú–ü–û–†–¢ –í–ê–®–ò–• –ú–û–î–£–õ–ï–ô ‚Äî –£–ë–ï–î–ò–¢–ï–°–¨, –ß–¢–û –ü–£–¢–ò –í–ï–†–ù–´
# =========================
from mms_tts import TTSVocaliser, play_audio_resample
from vosk_recognizer_async import listen_and_recognize_phrase


# =========================
# üõ†Ô∏è –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ‚Äî –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –°–í–û–ò –ü–£–¢–ò
# =========================
MODEL_DIR = "/home/pi/Repo/orin/models"
SERVER_URL = 'http://192.168.1.17:8080/rkllm_chat'
LLM_MODEL = "Qwen3-0.6B-rk3588-w8a8.rkllm"
MAX_LENGTH = 200
vocab = {}  # –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä—å –∏–∑ mms_tts.py, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è

# =========================
# üì¶ –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ‚Äî –û–î–ò–ù –†–ê–ó, –ù–ê –í–°–Å –í–†–ï–ú–Ø
# =========================
text_queue = queue.Queue()            # —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—á–µ—Ä–µ–¥—å –¥–ª—è —Ç–µ–∫—Å—Ç–∞ (–æ—Ç LLM ‚Üí TTS)
audio_buffer = asyncio.Queue()        # –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—á–µ—Ä–µ–¥—å –¥–ª—è –≥–æ—Ç–æ–≤–æ–≥–æ –∞—É–¥–∏–æ (TTS ‚Üí player)
expected_audio_count = 0              # üîë –ö–õ–Æ–ß–ï–í–û–ô: —Å–∫–æ–ª—å–∫–æ –∞—É–¥–∏–æ—Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ –æ–∂–∏–¥–∞–µ—Ç—Å—è
audio_count_lock = asyncio.Lock()     # –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—á—ë—Ç—á–∏–∫—É
is_running = True                     # —Ñ–ª–∞–≥ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ

tts_vocaliser = TTSVocaliser()        # –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞ –≤—Å—ë –≤—Ä–µ–º—è
session = Session()                   # –æ–¥–Ω–∞ —Å–µ—Å—Å–∏—è –Ω–∞ –≤—Å—ë –≤—Ä–µ–º—è


# =========================
# ü§ñ LLM ‚Äî –∑–∞–ø—Ä–æ—Å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É Qwen-1.7B
# =========================
def send_chat_request_queued(user_message: str, is_streaming=True):
    global expected_audio_count
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ LLM –∏ –∫–ª–∞–¥—ë—Ç –æ—Ç–≤–µ—Ç –≤ text_queue –ø–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º"""
    headers = {
        'Content-Type': 'application/json',
        'Authorization': 'not_required'
    }
    data = {
        "model": LLM_MODEL,
        "messages": [{"role": "user", "content": user_message}],
        "stream": is_streaming,
        "enable_thinking": False,
        "tools": None
    }

    print(f"üì© [LLM] –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å: {user_message[:50]}...")
    responses = session.post(SERVER_URL, json=data, headers=headers, stream=is_streaming, verify=False)

    if responses.status_code != 200:
        print(f"‚ùå [LLM] –û—à–∏–±–∫–∞: {responses.text}")
        return

    # üëá –°–æ–∑–¥–∞—ë–º –æ–¥–∏–Ω –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –Ω–∞ –≤–µ—Å—å –æ—Ç–≤–µ—Ç
    processor = StreamTextProcessor(max_chunk_size=200)
    buff = ""

    for line in responses.iter_lines():
        if not line:
            continue
        try:
            line_data = json.loads(line.decode('utf-8'))
        except json.JSONDecodeError:
            continue

        if line_data["choices"][-1]["finish_reason"] == "stop":
            # üëá –î–û–ë–ê–í–õ–Ø–ï–ú –û–°–¢–ê–¢–û–ö –í buff ‚Äî —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –µ–≥–æ –≤ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–µ
            if buff.strip():
                for char in buff:
                    processor.feed(char)
                buff = ""

            # üëá –ö–õ–Æ–ß–ï–í–û–ô –®–ê–ì: –ò–ó–í–õ–ï–ö–ê–ï–ú –í–°–Å, –ß–¢–û –û–°–¢–ê–õ–û–°–¨ –í –ü–†–û–¶–ï–°–°–û–†–ï
            fragments = processor.flush()
            for frag in fragments:
                if frag:
                    text_queue.put(frag)
                    print(f"üì¶ [LLM] –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç: '{frag[:40]}...' (#{len(frag)})")
                    expected_audio_count += 1
            break  # ‚Üê –í—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞

        reply = line_data["choices"][-1]["delta"].get("content", "")
        if reply:
            # üëá –ü–æ—Ç–æ–∫–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
            for char in reply:
                fragments = processor.feed(char)
                for frag in fragments:
                    if frag:
                        text_queue.put(frag)
                        print(f"üì¶ [LLM] –§—Ä–∞–≥–º–µ–Ω—Ç: '{frag[:40]}...' (#{len(frag)})")
                        expected_audio_count += 1

            # –î–æ–±–∞–≤–ª—è–µ–º reply –≤ buff ‚Äî –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–µ—Å–ª–∏ finish_reason –Ω–µ –ø—Ä–∏—à—ë–ª)
            buff += reply

    # üëá üî¥ –ë–ï–ó –≠–¢–û–ì–û ‚Äî –ü–û–°–õ–ï–î–ù–ï–ï –°–õ–û–í–û –ü–†–û–ü–ê–î–ê–ï–¢!
    # –ù–û: –º—ã —É–∂–µ –≤—ã–∑–≤–∞–ª–∏ flush() –≤ `finish_reason == "stop"` ‚Äî —Ç–∞–∫ —á—Ç–æ –∑–¥–µ—Å—å –Ω–µ –Ω—É–∂–Ω–æ
    # –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ LLM –≤–µ—Ä–Ω—ë—Ç –æ—Ç–≤–µ—Ç –±–µ–∑ "finish_reason" ‚Äî —ç—Ç–æ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∑–∞—â–∏—Ç–∞:
    if not line_data["choices"][-1]["finish_reason"]:  # —Ä–µ–¥–∫–∏–π —Å–ª—É—á–∞–π
         fragments = processor.flush()
         for frag in fragments:
            if frag:
                text_queue.put(frag)
                expected_audio_count += 1


# =========================
# üöÄ –ê–°–ò–ù–•–†–û–ù–ù–´–ô –ö–û–ù–í–ï–ô–ï–† ‚Äî –†–ê–ë–û–¢–ê–ï–¢ –í–°–ï–ì–î–ê
# =========================
async def audio_player():
    """–ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç –∞—É–¥–∏–æ—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –∏–∑ –æ—á–µ—Ä–µ–¥–∏ ‚Äî –ù–ò–ö–û–ì–î–ê –ù–ï –£–ú–ò–†–ê–ï–¢"""
    print("üîä [AUDIO PLAYER] –ó–∞–ø—É—â–µ–Ω (–≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç)")
    try:
        while True:
            audio_data = await audio_buffer.get()
            if audio_data is None:
                print("üõë [AUDIO PLAYER] –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ ‚Äî –∑–∞–≤–µ—Ä—à–∞—é...")
                break

            print(f"üéß [PLAYER] –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ –¥–ª–∏–Ω–æ–π {len(audio_data)} —Å—ç–º–ø–ª–æ–≤")
            start_play = time.time()
            play_audio_resample(audio_data)
            duration_sec = len(audio_data) / 16000
            end_play = time.time()

            print(f"‚úÖ [PLAYER] –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ (—Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {duration_sec:.3f}—Å)")
            print(f"‚è±Ô∏è [PLAYER] play_audio() –∑–∞–Ω—è–ª–∞ {end_play - start_play:.3f}—Å (–æ–∂–∏–¥–∞–ª–æ—Å—å ~{duration_sec:.3f}—Å)")

            audio_buffer.task_done()

            # üëá –£–º–µ–Ω—å—à–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ ‚Äî –æ–¥–∏–Ω –ø—Ä–æ–∏–≥—Ä–∞–Ω
            async with audio_count_lock:
                global expected_audio_count
                expected_audio_count -= 1
                print(f"üìä [PLAYER] –û—Å—Ç–∞–ª–æ—Å—å –æ–∂–∏–¥–∞—Ç—å: {expected_audio_count} —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤")
    except Exception as e:
        print(f"‚ùå [AUDIO PLAYER] –û—à–∏–±–∫–∞: {e}")
    finally:
        print("‚úÖ [AUDIO PLAYER] –ó–∞–≤–µ—Ä—à—ë–Ω")


async def audio_synthesizer():
    """–°–∏–Ω—Ç–µ–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ –∞—É–¥–∏–æ ‚Äî –ù–ò–ö–û–ì–î–ê –ù–ï –£–ú–ò–†–ê–ï–¢"""
    print("üß† [SYNTHESIZER] –ó–∞–ø—É—â–µ–Ω (–≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç)")
    try:
        while True:
            text = await asyncio.to_thread(text_queue.get)
            if text is None:
                print("üõë [SYNTHESIZER] –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ ‚Äî –∑–∞–≤–µ—Ä—à–∞—é...")
                await audio_buffer.put(None)
                break

            print(f"üìù [SYNTHESIZER] –ü–æ–ª—É—á–∏–ª —Ç–µ–∫—Å—Ç: '{text}'")
            audio_data = tts_vocaliser.synthesize(text)
            print(f"üéµ [SYNTHESIZER] –°–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–ª: {len(audio_data)} —Å—ç–º–ø–ª–æ–≤ ‚Üí –∫–ª–∞–¥—É –≤ –±—É—Ñ–µ—Ä")
            await audio_buffer.put(audio_data)

            # üëá –£–º–µ–Ω—å—à–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ ‚Äî –æ–¥–∏–Ω —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω –∏ –ø–æ–ª–æ–∂–µ–Ω
            #async with audio_count_lock:
            #    global expected_audio_count
            #    expected_audio_count -= 1
            #    print(f"üìä [SYNTHESIZER] –û—Å—Ç–∞–ª–æ—Å—å –æ–∂–∏–¥–∞—Ç—å: {expected_audio_count} —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤")
    except Exception as e:
        print(f"‚ùå [SYNTHESIZER] –û—à–∏–±–∫–∞: {e}")
        await audio_buffer.put(None)
    finally:
        print("‚úÖ [SYNTHESIZER] –ó–∞–≤–µ—Ä—à—ë–Ω")


# =========================
# üì¶ –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
# =========================
async def say_message(msg: str):
    """–ö–ª–∞–¥—ë—Ç —Ç–µ–∫—Å—Ç –≤ –æ—á–µ—Ä–µ–¥—å ‚Äî –Ω–µ –æ–∑–≤—É—á–∏–≤–∞–µ—Ç —Å—Ä–∞–∑—É!"""
    async with audio_count_lock:
        global expected_audio_count
        expected_audio_count += 1
    print(f"üì§ [SAY] –û—Ç–ø—Ä–∞–≤–ª—è—é –≤ –æ—á–µ—Ä–µ–¥—å: '{msg}'")
    text_queue.put(msg)

def clear_text_queue():
    """–û—á–∏—â–∞–µ—Ç –æ—á–µ—Ä–µ–¥—å —Ç–µ–∫—Å—Ç–∞ ‚Äî —É–±–∏—Ä–∞–µ—Ç –º—É—Å–æ—Ä –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º –∑–∞–ø—Ä–æ—Å–æ–º"""
    while not text_queue.empty():
        try:
            text_queue.get_nowait()
        except queue.Empty:
            break
    print("üßπ –û—á–µ—Ä–µ–¥—å text_queue –æ—á–∏—â–µ–Ω–∞.")


# =========================
# üöÄ –ì–õ–ê–í–ù–´–ô –¶–ò–ö–õ ‚Äî –û–î–ò–ù –†–ê–ó, –ù–ê –í–°–Æ –ñ–ò–ó–ù–¨
# =========================
async def run_agent():
    global is_running

    # üîß –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
    print("üì¢ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...")
    print("‚úÖ TTS –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    print("‚úÖ ASR –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    print("‚úÖ LLM —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")

    # üì£ –ü–†–ò–í–ï–¢–°–¢–í–ò–ï
    greetings = [
        "–ü—Ä–∏–≤–µ—Ç, —è –û—Ä–∏–Ω.",
        "–Ø ‚Äî –≤–∞—à –≥–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.",
        "–Ø —Ä–∞–±–æ—Ç–∞—é –ø–æ–ª–Ω–æ—Å—Ç—å—é –ª–æ–∫–∞–ª—å–Ω–æ."
    ]

    print("üì¢ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é... –û—Ç–ø—Ä–∞–≤–ª—è—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å...")
    for msg in greetings:
        await say_message(msg)

    # üöÄ –ó–ê–ü–£–°–ö –ö–û–ù–í–ï–ô–ï–†–ê ‚Äî –û–î–ò–ù –†–ê–ó, –ù–ê –í–°–Å –í–†–ï–ú–Ø
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–Ω–≤–µ–π–µ—Ä (–ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç)...")
    player_task = asyncio.create_task(audio_player())
    synth_task = asyncio.create_task(audio_synthesizer())

    # üëá –ñ–î–Å–ú, –ü–û–ö–ê –ü–†–ò–í–ï–¢–°–¢–í–ò–Ø –ü–†–û–ò–ì–†–ê–Æ–¢–°–Ø
    print("‚è≥ –ñ–¥—É, –ø–æ–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–∏–≥—Ä–∞—é—Ç—Å—è...")
    while True:
        async with audio_count_lock:
            if expected_audio_count == 0:
                break
        await asyncio.sleep(0.1)
    print("‚úÖ –í—Å–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–∏–≥—Ä–∞–Ω—ã! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–ª—É—à–∞—Ç—å.")

    # üëá –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ ‚Äî –°–õ–£–®–ê–ï–ú, –û–¢–í–ï–ß–ê–ï–ú ‚Äî –ù–ò–ö–û–ì–î–ê –ù–ï –ó–ê–í–ï–†–®–ê–ï–¢–°–Ø
    try:
        while True:
            print("\n--- –û–∂–∏–¥–∞—é —Ä–µ—á–∏... ---")
            inp = await listen_and_recognize_phrase(timeout=15.0)

            if not inp.strip():
                print("üîá –ü—É—Å—Ç–æ–π –≤–≤–æ–¥, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
                continue

            # ‚úÖ –û–ß–ò–©–ê–ï–ú –û–ß–ï–†–ï–î–¨ ‚Äî —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ "—Å—Ç–∞—Ä—ã—Ö" —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤
            clear_text_queue()

            print(f"üì© –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å: {inp}")
            await asyncio.to_thread(send_chat_request_queued, inp, True)

            # üëá –≠–¢–ê–ü 1: –ñ–î–Å–ú, –ü–û–ö–ê LLM –ó–ê–ö–û–ù–ß–ò–õ –û–¢–ü–†–ê–í–õ–Ø–¢–¨ –¢–ï–ö–°–¢
            print("‚è≥ –ñ–¥—É, –ø–æ–∫–∞ LLM –∑–∞–∫–æ–Ω—á–∏—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã...")
            while not text_queue.empty():
                await asyncio.sleep(0.1)
            print("‚úÖ –í—Å–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã —Ç–µ–∫—Å—Ç–∞ –≤ –æ—á–µ—Ä–µ–¥–∏.")

            # üëá –≠–¢–ê–ü 2: –ñ–î–Å–ú, –ü–û–ö–ê –í–°–ï –§–†–ê–ì–ú–ï–ù–¢–´ –ë–£–î–£–¢ –ü–†–û–ò–ì–†–ê–ù–´
            print("‚è≥ –ñ–¥—É, –ø–æ–∫–∞ –≤—Å–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –±—É–¥—É—Ç –ø—Ä–æ–∏–≥—Ä–∞–Ω—ã...")
            while True:
                async with audio_count_lock:
                    if expected_audio_count == 0:
                        break
                print(f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å {expected_audio_count} —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ ‚Äî –∂–¥—É...")
                await asyncio.sleep(0.2)
            print("‚úÖ –í—Å–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–Ω—ã!")

            # üëá –≠–¢–ê–ü 3: –ñ–î–Å–ú –†–ï–ê–õ–¨–ù–û–ï –í–†–ï–ú–Ø –ü–†–û–ò–ì–†–´–í–ê–ù–ò–Ø ‚Äî —á—Ç–æ–±—ã —ç—Ö–æ –∑–∞—Ç—É—Ö–ª–æ
            print("‚è∏Ô∏è –ñ–¥—É, —á—Ç–æ–±—ã –∑–≤—É–∫ —Ä–µ–∞–ª—å–Ω–æ –∑–∞—Ç—É—Ö... (1.5—Å)")
            await asyncio.sleep(1.5)

            print("‚úÖ –û—Ç–≤–µ—Ç –ø—Ä–æ–∏–≥—Ä–∞–Ω. –ú–æ–∂–Ω–æ —Å–ª—É—à–∞—Ç—å —Å–Ω–æ–≤–∞.")

            # üëá –¢–û–õ–¨–ö–û –¢–ï–ü–ï–†–¨ ‚Äî –ú–ò–ö–†–û–§–û–ù –í–ö–õ–Æ–ß–ê–ï–¢–°–Ø
            print("\n--- –û–∂–∏–¥–∞—é —Ä–µ—á–∏... ---")

    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≥–µ–Ω—Ç–∞...")
        is_running = False
        text_queue.put(None)  # ‚Üê –°–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞—Ç–æ—Ä–∞
        await asyncio.sleep(0.5)  # –î–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        is_running = False
        text_queue.put(None)
        await asyncio.sleep(0.5)


# =========================
# üèÅ –ó–ê–ü–£–°–ö
# =========================
if __name__ == "__main__":
    try:
        asyncio.run(run_agent())
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")